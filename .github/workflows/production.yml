name: Revert Specified Files on PR to Master

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - develop
env:
  BASE_REF: ${{ github.base_ref != '' && github.base_ref || 'master' }}
  BRANCH_NAME: ${{ github.event.pull_request.head.ref || 'demo' }}

jobs:
  revert-specified-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_NAME }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Fetch origin ${{ env.base_ref }}
        run: git fetch origin ${{ env.base_ref }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check for changes in specified files
        id: check_changes
        run: |
          changes_detected=false
          files=$(jq -c '.files' ignoredToMergeIntoMaster.json)
          for item in $(echo $files | jq -c '.[]'); do
            file=$(echo $item | jq -r '.file')
            path=$(echo $item | jq -r '.path')
            full_path="$path/$file"
            echo $full_path
            if git diff origin/${{ env.BASE_REF }} --name-only | grep -q "$file"; then
              changes_detected=true
              break
            fi
          done
          echo "changes_detected=$changes_detected" >> $GITHUB_ENV

      - name: Revert changes in specified files
        if: env.changes_detected == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          files=$(jq -c '.files' ignoredToMergeIntoMaster.json)
          for item in $(echo $files | jq -c '.[]'); do
            file=$(echo $item | jq -r '.file')
            path=$(echo $item | jq -r '.path')
            full_path="$path/$file"
            if git diff origin/${{ env.BASE_REF }} --name-only | grep -q "$file"; then
              git checkout origin/${{ env.BASE_REF }} -- "$full_path"
            fi
          done
          git commit -am "Revert changes in specified files brnach ${{ env.BRANCH_NAME }}"
          git push origin HEAD:${{ env.BRANCH_NAME }} -f

      - name: Continue if no changes in specified files
        if: env.changes_detected == 'false'
        run: echo "No changes in specified files, proceeding with the workflow."